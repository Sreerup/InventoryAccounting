<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TextBoxDescription.Text" xml:space="preserve">
    <value>Description :

(At runtime, the labels' text will be replaced with the application's assembly information.
Customize the application's assembly information in the Application pane of Project Designer.)</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk3WFwAAAAAAADYAAAAoAAAANwAAACQAAAABABgAAAAAAAAAAADEDgAAxA4AAAAAAAAAAAAAMuP9OOf+
        Oeb/NOX/KOX9Kuf/MOb/PeT/L+f/Juf+Jub+POH/OOP/NOX/Ken+OOb9L+f/Lej/P+P/OeX/LOf9I+r9
        PeD/MeT+Juf9I+f+LuX+POT/POX9LOn9J+n9Juj/Luf9L+b/I+r8Kuj8O+P/PeL+Lef+Kur8Mub/PuP+
        OeX+NOf9OeX/K+H/LOH+N+P9KOr7Lub9Muf/LuP/Luj4NOz7OuD/AAAAAPP/AfP+APL+AvX/AvT/APX/
        BvP/F/D/CvP/APX/AfX/Aff/Afj+Aff+APf7Bvb8A/X/APX/CPP/A/X/BvX/B/X/Afn4APj4Afj6Aff+
        Avb/BPb9BPb8AfX9APb/CfP/E+/+DfP+Bvb8APb8APj+Afb+Avb+Afb+APf9Afb+APf+APX+Cfb8AvL/
        AvP/B/X/EPX6B/L9Cvb+A/X9GfT4Cff7Au3+AAAAE/L9DfL7D/P9GuvzBfLzBPbzA/fyD/TxCvXxDPXx
        DvTyBfD7CPD6CvD6CfL3BPL4BPD6BO/7APH8A/D8BPH6B/H4DPH2BvL2BfL2CfL3CvL4DfD6DPD7B/H7
        BfH7C/D7EO39Eu/7A/L7AfH7APP7Eu76D+/6CvD7BvH6B/H7CPD7BfD8EPH2C+/7A/P7APT4CvL3CvD7
        Ce/5BvD7B/H6BfT+Au7/AAAAA/H4E/D0I7G8I1ZoJVJfIVJeH1NfJVFfJlJfKVFfNE9fJlVdK1VaLFVa
        KFZZL1VaN1BdOk5eIFRdLVNaMFRYMVRWLVFcLk5gMU5fNVBaH1ZXJ1JcKlFdI1RZKVVUJVZUIVRWK1NZ
        KVFdKFFdIFVYN1FXNlBbMlBdIlVZJ1RYKlJbLlBdMlFWJFNZJVNXLFFXM09aM1BeKVNbEVpbBpeUH/Dq
        IPD+AAAAAvP7EvX2D5ujDxotFxckFxgmExokEBolDBslDhwjFBoiGxsjExogFB4iEx4gAB0eAhwhCBwl
        ERkfFB4gEh4ZFyAaCh4iDRgnDhgnCiIjChsZCxwlAxcmCBsnBCMhBx4eERwlAyAfFBYkExgkER8gDh4b
        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
        DoN+H/D2DPL6JOvsE15kDhwiEB0eCWBlMejyFvH6FO3vB1tgEB0kFxocBnB0D/D1BPH+AAAABPP5EvH8
        ApqtGBcsFyATFBoaFhkoECITLWQBRYgRLG8GVEQL0YkU4ZEEx4oBVjEBGxofCxkrEBIrNltrQ210PWRl
        ACIdFxscFx0eBRkdDR0mJ01YPXCAQmuAMG+BM22CP2qAQVJiHTBBCBQjFRghFRwfJ0dKPWp7OGmBQmt8
        ECcvFyAjIRkeGB0pO2l6K3GCMHB+ITM9GBkiGhkiC2x2He/yBPD9AAAABPL6EvH7ApmsGBgqFx0YFxwb
        EBgdGTcKPX8ERJAKMHgDPzsKu34R4JEB35ICrH0TQTANHRodHBsjGRskGh0hFx0cGxogHRkeFRgcDhwe
        ERseDxodDyEjEhwiDh0iCh4jCxwjDhshFhgkGxcoGxYkFhsdExocFBojEBosCRglFxsjHRYaFhofHhwl
        ExYjGBsqFRkkEBwjDBoeFBknCmt3G+/xAvP+AAAAA/L6EvH7Ap2oGBskFxoeFxsdEx4YMV0QQosEQpMF
        OYYHKC8LpHIP3ZMC4pQAz40IlmscPSsOIhsWFxcbGRkdGRogHxgeIBcfGBgeERsdFRobGBwcGBsbFh0a
        GBsaFBsdExoeEB4bGhgfHBYlHRUnExsdHh0dGhYWGBggEBgkGhogIhsdDhogGhYfHRoiGhYeIxsfER0e
        CxodFhcpCmx4GPDyA/T/AAAAA/L8EPL6Ap6kGB4eFxcjFhogIjUgTH8YR5IEP5ABOpICHTMWglwF2pcI
        3ZUA7ZUJ04wMqn4gRS4gCSMZCBkjEBcpEhwgGxcdHBYfFxshDxsdFxwbHRgZDh8dGhkdHBYjGRYlHR4Z
        FBgYFhwmFBYlCxgaFxoXISEdGBkcEhskDhsdER4cEhofGh8iFBsZFB8dHhsYFh8cExkfJxQpCWl5FvDz
        BPT/AAAAA/T1E/L5BpmrERgtFhgiHzAVQWwdQZACR5IBP5ABO5MDM0gcTjUKtHwo05YB2ZQA4pUA3Y4D
        vYQLeFAuMioWHB8RGhchGBshFRgcFRobGBwdGhchHxciHxYiHRghGhkeGRsbFxofFxofFxofFxofFxof
        FxofFxofFxofFxofFxofFxofFhofGRgiGBghFxkhFhseFRodFxwgFxclCW52FvD0A/L+AAAAA/P5E/P4
        BpumER0jFhsdFh4XHTMYKVccRHUiSIgUQZMCMGoXJTQBg1MZ24sT8ZME348A3pUE35gA2Y4IxYASil8M
        TTgRMCYOIyAXFx4eDxgiERogFhseGRocGRkfGxcjGxYkFxofFxofFxofFxofFxofFxofFxofFxofFxof
        FxofFxofFhofGRgiGBghFxkhFhseFRodFxwgFxclCW52FvD0AvL+AAAAA/D/E/H7BpulEh8fFxwbGh0h
        FBgiBxsZEB8UL08aRn4YPYIMGTsOOCQRomgs3Y4A35MG1o4A15QC4p0B4JQB5JMH25cCxIcJmXEiUz0e
        IRoYFhodFhofFh0ZEB0bDBojCRgoFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFhofGRgi
        GBghFxkhFhseFRodFxwgFxclCW52FvD0AvL+AAAAA/D+E/D9BpqoEh4hGRwaGRscFBYcDhwgFRsgFSAW
        GzwLOGYYKkgZKSURVDcdr4IlzZEL3JYD3JIC15MD3ZUF4ZMEzpIKsYIaaUwQLiQYFxglEhckFRgiFxwa
        FB0bEBseDRojFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFhofGRgiGBghFxkhFhseFRod
        FxwgFxclCW52FvD0AvL+AAAAAe//EvH8BpunEx4iGxscGhodGRkeERwdGhclGxkjEB8VES8OMkYhJioS
        IRgSV0IQqH8U1JQE5pMB2o8F2JIG0IwNmWsXWDYMMCMNGBseDhcoERkoFxgiHRobHBscGRoeFBkgFxof
        FxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFhofGRgiGBghFxkhFhseFRodFxwgFxclCW52FvD0
        A/L+AAAAA/D/EfL6B5ykEh4iGxciGxghHRkeEx8WHRcjHRQoFRUpChopGiIPIiYMGBsYICEPTz8FuH8A
        7JIA55QAzo0Cj14ONx8hIRUhExgkCBgnCRkmERsiIBocJhoZJxgcJRcgHxciFxofFxofFxofFxofFxof
        FxofFxofFxofFxofFxofFxofFhofGRgiGBghFxkhFhseFRodFxwgFxclCW52FvD0AvL+AAAAA/H8E/T2
        B6CbEh8gGxUoGxMqHBQpFBwbHRkeHRkeFhsdFBwcFRcjGBYlHBsdGh4TGxsSPCIhfk4Pp4QKeFoLMB0U
        JxYfJRweHBwWGiAUFyERGB8SHR4VHRobFxofEhohDxkjFxofFxofFxofFxofFxofFxofFxofFxofFxof
        FxofFxofFhofGRgiGBghFxkhFhseFRodFxwgFxclCW52FvD0AvL+AAAAA/P5E/T1B5yjER4jGRcjGBYm
        GBUnEhseGhghGxodFB8XIBoWFRoiEBYlEhQnGxghFRknEhYqFhcgICUSGyEXEBkhDR0cDRsZEhwZFBsb
        EBseEBoiDxgkDRkkDBwfDR4aEB8XFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFhofGRgi
        GBghFxkhFhseFRodFxwgFxclCW52FvD0AvL+AAAABPT1E/H8B5avERgtFxoeFx0aFx4YER0bGBUoGBUn
        EhsfFhkkHhcfHxocExwdDRsdExkdHBUZJBgnHR0mGx0iFhsbExwhGRokIRklIBUhHRYhGRYjFxclFxcj
        GhghIhcgKBYfFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFhofGRgiGBghFxkhFhseFRod
        FxwgFxclCW52FvD0AvL+AAAAA/H7E/P4CJqnERoqGBoeGBscGBwbEhweGhgiGRgjExogFxkhGRkeGhoe
        FRseEhseFhofGxofGxggFxgfGBofFxodFhohFxkfGRgfHBkhGhkhGBggFxkhFxkhGRkgHBkfHRkfFxof
        FxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFhofGRgiGBghFxkhFhseFRodFxwgFxclCW52FvD0
        AvL+AAAAA+/+E/T2CZ2iEhsoGRoeGRoeGRoeEhohGxkfGhofFBseFxofFxofFxofFxofFxofFxofFxof
        FxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFxofFxof
        FxofFxofFxofFxofFxofFxofFhofGRgiGBghFxkhFhseFRodFxwgFxclCW52FvD0AvL+AAAACvP9EPTy
        AaGdDR0jGxkZIhUYJRUeGBcgGhgeGhkdFxobFBodFBodFBodExodEhodEhodEhodEhodEhodEhodEhoe
        EhodEhodEhodEhodEhodEhodEhodEhodEhodEhodEhodEhodEhodEhodEhodEhodEhodEhodEhodEhod
        EhodEhodFBobHBgeHhYgIBUgIBccIxgZIxYYBh4hCnJ3GvDyBPb9AAAACe/+DvLyAKinBSoxDiUoESgr
        ESUwCiYxCyYuDCctCSgrCSYvCSYvCSYvCScuCSYvCCYuCCYuCCYvCCYvCCYvCCYvCCYvCCYvCCYvCCYv
        CCYvCCYvCCYvCCYvCCYvCCYvCCYvCCYvCCYvCCYvCCYvCCYvCCYvCCYvCCYvCCYvCCYvCCYvCSgqCyYt
        DiQvESMxDyUvEiIoESUqAykvCHd+Eu/yA/D9AAAADvH9C/T5DOrqQcbPP83QQcjQQcjUO8nUPsnRQMrQ
        PcvOQMrSQsnTQsnUQsnUQsnUQcjTQcjTQcjTQcjTQcjTQcjTQsnUQsnUQsnUQsnUQsnUQsnUQsnUQsnU
        QsnUQsnUQsnUQcjTQcjTQcjTQcjTQcjTQcjTQcjTQcjTQcjTQcjTQcjTPMzNQMnQQsfUQcjVPsnURMrU
        RcnSOcjRJNjgD/P8A/L+AAAAEO/8Afb+Avb7Ge71BfX2A/j+APX/APX/BvX8CfX7Cfb5APb8AvX9AvX+
        A/X+BPX+BPT/BPX+BPX+Avb8Avb8Avb8AvT/AvT/AvT/AvT/AvT/AvT/AvT/AvT/AvT/AvT/AvT/AvX+
        AvX+AvX+AvX+AvX+AvX+AvX+AvX+AvX+AvX+AvX+Aff4Bvb7BPP/APX/Afb/APf9BPT4DvD7Dfb+APT9
        BvH+AAAAE/L7Avb8AfX7DvL9APT+AfP+A/L/AvT/BvP/BfX9APX7BfX8BvX9B/P/B/H9CPL+B/D+CPH/
        BvL/BPP+BPP+AvL9BPT/BPT/BPT/BPT/BPT/A/P+A/P+BPT/BPT/BPT/BPT/BPT/BPT/BPT/BPT/BPT/
        A/P+A/P+A/P+A/P+BPT/BPT/APb6AfT9AfL+AfP+AfP+AfT/APT+A/P+BfX+AfX9BfH+AAAAK9D3JdL4
        JtL5L9D5LNH5L9D5M877M9D7NNH5M9L5MNH3NdP2M9H2NM73Nc/5M835M8v5Msv4Mcz4Lc34K834Kc74
        KM73KM73KM73KM73KM73KM73KM73Kc/4Kc/4KM74KM74Kc/3Kc/3Kc/3Kc/3Kc/3KM73KM73Kc/4Kc/4
        Kc/4Kc/4KtH3Mc74N834Oc34Oc34Ns33Mc75L8/4MtH4MdH5NND4AAAA
</value>
  </data>
</root>